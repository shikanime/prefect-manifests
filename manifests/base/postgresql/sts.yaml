apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prefect-postgresql
  labels:
    app.kubernetes.io/name: prefect-server
    app.kubernetes.io/component: postgresql
spec:
  serviceName: prefect-postgresql-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: prefect-server
      app.kubernetes.io/component: postgresql
  template:
    metadata:
      name: prefect-postgresql
      labels:
        app.kubernetes.io/name: prefect-server
        app.kubernetes.io/component: postgresql
    spec:
      containers:
        - name: postgresql
          image: docker.io/bitnami/postgresql:11.9.0-debian-10-r1
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: "/bitnami/postgresql"
            - name: POSTGRESQL_INITSCRIPTS_USERNAME
              value: postgres
            - name: PGDATA
              value: "/bitnami/postgresql/data"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: prefect-postgresql
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: prefect-postgresql
                  key: password
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: prefect-postgresql
                  key: database
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
          ports:
            - name: postgresql
              containerPort: 5432
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "$POSTGRES_USER" -d "dbname=$POSTGRES_DB" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "$POSTGRES_USER" -d "dbname=$POSTGRES_DB" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            initialDelaySeconds: 5
            timeoutSeconds: 5
            failureThreshold: 6
          volumeMounts:
            - name: initdb
              mountPath: /docker-entrypoint-initdb.d/
            - name: dshm
              mountPath: /dev/shm
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
      volumes:
        - name: initdb
          configMap:
            name: prefect-postgresql-initdb
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
        - name: data
          emptyDir: {}
